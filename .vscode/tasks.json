{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        // Simulate task
        {
            "label": "simulate",
            "detail": "Launch Gazebo Simulation",
            "type": "shell",
            "command": "./tasks/simulate.sh ${input:camera}",
            "problemMatcher": []
        },
        // Agent task
        {
            "label": "agent",
            "detail": "Launch Micro XRCE Agent",
            "type": "shell",
            "command": "./tasks/agent.sh",
            "problemMatcher": []
        },
        // Build tasks
        {
            "label": "build",
            "detail": "Build workspace (default)",
            "type": "shell",
        "command": "./tasks/build.sh ${input:buildFolder} ${input:sequentialBuild}",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "debug",
            "detail": "Build workspace (debug)",
            "type": "shell",
            "command": "./tasks/build.sh",
            "options": {
                "env": {
                    "BUILD_TYPE": "Debug"
                }
            },
            "group": "build",
            "problemMatcher": "$gcc"
        },
        // Test tasks
        {
            "label": "test",
            "detail": "Run all unit tests and show results.",
            "type": "shell",
            "command": "./tasks/test.sh",
            "group": {
                "kind": "test",
                "isDefault": true
            }
        },
        // Clean
        {
            "label": "clean",
            "detail": "Run the clean target",
            "type": "shell",
            "command": "colcon build --cmake-target clean",
            "problemMatcher": "$gcc"
        },
        {
            "label": "purge",
            "detail": "Purge workspace by deleting all generated files.",
            "type": "shell",
            "command": "rm -fr build install log; py3clean .",
            "problemMatcher": []
        },
        // Workspace editing tasks
        {
            "label": "new ament_cmake package",
            "detail": "Create a new ROS cpp package from a template.",
            "type": "shell",
            "command": "ros2 pkg create --destination-directory src --build-type ament_cmake ${input:package}",
            "problemMatcher": []
        },
        {
            "label": "new ament_python package",
            "detail": "Create a new ROS python package from a template.",
            "type": "shell",
            "command": "ros2 pkg create --destination-directory src --build-type ament_python ${input:package}",
            "problemMatcher": []
        },
        {
            "label": "setup",
            "detail": "Set up the workspace",
            "type": "shell",
            "command": "./tasks/setup.sh ${input:simulation} ${input:sequentialBuild}",
            "problemMatcher": []
        },
        {
            "label": "add submodules from .repos",
            "detail": "Create a git submodule for all repositories in your .repos file",
            "type": "shell",
            "command": "python3 .devcontainer/repos_to_submodules.py",
            "problemMatcher": []
        }
    ],
    "inputs": [
        {
            "id": "package",
            "type": "promptString",
            "description": "Package name"
        },
        {
            "id" : "buildFolder",
            "description": "Which targets to build?",
            "type": "pickString",
            "options": [
                "all",
                "frtl_2023",
                "dependencies",
                "fsm",
                "simulation",
                "fase1",
                "fase2",
                "fase3",
                "fase4"
            ],
            "default": "all"
        },
        {
            "id" : "sequentialBuild",
            "description": "Choose between parallel or sequential build.",
            "type": "pickString",
            "options": [
                "sequential",
                "parallel"
            ],
            "default": "parallel"
        },
        {
            "id" : "simulation",
            "description": "Choose between setup with or without simulation.",
            "type": "pickString",
            "options": [
                "\"with simulation\"",
                "\"without simulation\""
            ],
            "default": "With simulation"
        },
        {
            "id" : "camera",
            "description": "Choose between simulate with or without camera.",
            "type": "pickString",
            "options": [
                "\"com camera\"",
                "\"sem camera\""
            ],
            "default": "com camera"
        },

    ]
}
